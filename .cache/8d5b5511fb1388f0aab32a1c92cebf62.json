{"dependencies":[{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\clamp\\package.json","includedInParent":true,"mtime":1635000530080},{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\package.json","includedInParent":true,"mtime":1635014046110},{"name":"../max/index.js","loc":{"line":1,"column":16},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\clamp\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\max\\index.js"},{"name":"../min/index.js","loc":{"line":2,"column":16},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\clamp\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\min\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\clamp\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clamp;\n\nvar _index = require(\"../max/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../min/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\n\nfunction clamp(date, _ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  (0, _index6.default)(2, arguments);\n  return (0, _index4.default)([(0, _index2.default)([date, start]), end]);\n}","map":{"mappings":[{"name":"clamp","generated":{"line":6,"column":18},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":4,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":15}},{"name":"clamp","generated":{"line":49,"column":9},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":24}},{"generated":{"line":49,"column":14},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":15}},{"name":"date","generated":{"line":49,"column":15},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":30}},{"generated":{"line":49,"column":19},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":15}},{"name":"_ref","generated":{"line":49,"column":21},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":36}},{"generated":{"line":49,"column":25},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":15}},{"generated":{"line":49,"column":27},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":31,"column":42}},{"generated":{"line":50,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":2}},{"name":"start","generated":{"line":50,"column":6},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":6}},{"name":"_ref","generated":{"line":50,"column":14},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":14}},{"name":"start","generated":{"line":50,"column":19},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":19}},{"generated":{"line":50,"column":24},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":2}},{"generated":{"line":51,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":2}},{"name":"end","generated":{"line":51,"column":6},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":33,"column":6}},{"name":"_ref","generated":{"line":51,"column":12},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":33,"column":12}},{"name":"end","generated":{"line":51,"column":17},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":33,"column":17}},{"generated":{"line":51,"column":20},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":32,"column":2}},{"generated":{"line":52,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":34,"column":2}},{"generated":{"line":52,"column":23},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":34,"column":15}},{"generated":{"line":52,"column":24},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":34,"column":2}},{"name":"arguments","generated":{"line":52,"column":26},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":34,"column":18}},{"generated":{"line":52,"column":35},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":34,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":2}},{"generated":{"line":53,"column":9},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":9}},{"generated":{"line":53,"column":30},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":13}},{"generated":{"line":53,"column":31},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":14}},{"generated":{"line":53,"column":52},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":18}},{"name":"date","generated":{"line":53,"column":53},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":19}},{"generated":{"line":53,"column":57},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":18}},{"name":"start","generated":{"line":53,"column":59},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":25}},{"generated":{"line":53,"column":64},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":18}},{"generated":{"line":53,"column":65},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":14}},{"generated":{"line":53,"column":66},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":13}},{"name":"end","generated":{"line":53,"column":68},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":34}},{"generated":{"line":53,"column":71},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":13}},{"generated":{"line":53,"column":72},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":9}},{"generated":{"line":53,"column":73},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":35,"column":2}},{"generated":{"line":54,"column":0},"source":"node_modules\\date-fns\\esm\\clamp\\index.js","original":{"line":36,"column":1}}],"sources":{"node_modules\\date-fns\\esm\\clamp\\index.js":"import max from \"../max/index.js\";\nimport min from \"../min/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\n\nexport default function clamp(date, _ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(2, arguments);\n  return min([max([date, start]), end]);\n}"},"lineCount":null}},"hash":"54a404af607eb4d83b9c0e7ffc37c139","cacheData":{"env":{}},"id":27}