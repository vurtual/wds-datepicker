{"dependencies":[{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\addMilliseconds\\package.json","includedInParent":true,"mtime":1635000530053},{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\package.json","includedInParent":true,"mtime":1635014046110},{"name":"../_lib/toInteger/index.js","loc":{"line":1,"column":22},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\addMilliseconds\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\_lib\\toInteger\\index.js"},{"name":"../toDate/index.js","loc":{"line":2,"column":19},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\addMilliseconds\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\toDate\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\addMilliseconds\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addMilliseconds;\n\nvar _index = require(\"../_lib/toInteger/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../toDate/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nfunction addMilliseconds(dirtyDate, dirtyAmount) {\n  (0, _index6.default)(2, arguments);\n  var timestamp = (0, _index4.default)(dirtyDate).getTime();\n  var amount = (0, _index2.default)(dirtyAmount);\n  return new Date(timestamp + amount);\n}","map":{"mappings":[{"name":"addMilliseconds","generated":{"line":6,"column":18},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":4,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":15}},{"name":"addMilliseconds","generated":{"line":45,"column":9},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":24}},{"generated":{"line":45,"column":24},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":15}},{"name":"dirtyDate","generated":{"line":45,"column":25},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":40}},{"generated":{"line":45,"column":34},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":15}},{"name":"dirtyAmount","generated":{"line":45,"column":36},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":51}},{"generated":{"line":45,"column":47},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":15}},{"generated":{"line":45,"column":49},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":27,"column":64}},{"generated":{"line":46,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":28,"column":2}},{"generated":{"line":46,"column":23},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":28,"column":15}},{"generated":{"line":46,"column":24},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":28,"column":2}},{"name":"arguments","generated":{"line":46,"column":26},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":28,"column":18}},{"generated":{"line":46,"column":35},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":28,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":2}},{"name":"timestamp","generated":{"line":47,"column":6},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":6}},{"generated":{"line":47,"column":18},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":18}},{"name":"dirtyDate","generated":{"line":47,"column":39},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":25}},{"generated":{"line":47,"column":48},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":18}},{"name":"getTime","generated":{"line":47,"column":50},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":36}},{"generated":{"line":47,"column":57},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":18}},{"generated":{"line":47,"column":59},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":29,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":2}},{"name":"amount","generated":{"line":48,"column":6},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":6}},{"generated":{"line":48,"column":15},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":15}},{"name":"dirtyAmount","generated":{"line":48,"column":36},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":25}},{"generated":{"line":48,"column":47},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":15}},{"generated":{"line":48,"column":48},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":30,"column":2}},{"generated":{"line":49,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":2}},{"generated":{"line":49,"column":9},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":9}},{"name":"Date","generated":{"line":49,"column":13},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":13}},{"generated":{"line":49,"column":17},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":9}},{"name":"timestamp","generated":{"line":49,"column":18},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":18}},{"name":"amount","generated":{"line":49,"column":30},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":30}},{"generated":{"line":49,"column":36},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":9}},{"generated":{"line":49,"column":37},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":31,"column":2}},{"generated":{"line":50,"column":0},"source":"node_modules\\date-fns\\esm\\addMilliseconds\\index.js","original":{"line":32,"column":1}}],"sources":{"node_modules\\date-fns\\esm\\addMilliseconds\\index.js":"import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}"},"lineCount":null}},"hash":"c47e453c68362c093d6cb94cd209068f","cacheData":{"env":{}},"id":20}