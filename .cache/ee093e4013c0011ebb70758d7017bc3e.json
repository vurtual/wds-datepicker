{"dependencies":[{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\isValid\\package.json","includedInParent":true,"mtime":1635000531340},{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\package.json","includedInParent":true,"mtime":1635014046110},{"name":"../isDate/index.js","loc":{"line":1,"column":19},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\isDate\\index.js"},{"name":"../toDate/index.js","loc":{"line":2,"column":19},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\toDate\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=s;var e=require(\"../isDate/index.js\"),r=n(e),t=require(\"../toDate/index.js\"),u=n(t),i=require(\"../_lib/requiredArgs/index.js\"),d=n(i);function n(e){return e&&e.__esModule?e:{default:e}}function s(e){if((0,d.default)(1,arguments),!(0,r.default)(e)&&\"number\"!=typeof e)return!1;var t=(0,u.default)(e);return!isNaN(Number(t))}","map":{"mappings":[{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"isValid","original":{"line":62,"column":24},"generated":{"line":1,"column":68}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"isValid","original":{"line":62,"column":24},"generated":{"line":1,"column":76}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"isValid","original":{"line":62,"column":24},"generated":{"line":1,"column":84}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":100}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":122}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":124}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":126}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":129}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":131}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":139}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":161}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":163}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":165}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":168}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":170}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":178}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":211}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":213}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":215}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":218}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":227}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":229}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":232}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":239}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":242}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":244}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":255}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":257}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":258}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":71,"column":1},"generated":{"line":1,"column":266}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":62,"column":15},"generated":{"line":1,"column":269}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"isValid","original":{"line":62,"column":24},"generated":{"line":1,"column":278}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":62,"column":32},"generated":{"line":1,"column":280}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":65,"column":6},"generated":{"line":1,"column":283}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":63,"column":15},"generated":{"line":1,"column":287}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":63,"column":15},"generated":{"line":1,"column":289}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":63,"column":15},"generated":{"line":1,"column":291}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":63,"column":15},"generated":{"line":1,"column":300}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"arguments","original":{"line":63,"column":18},"generated":{"line":1,"column":302}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":65,"column":7},"generated":{"line":1,"column":315}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":65,"column":14},"generated":{"line":1,"column":317}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":65,"column":14},"generated":{"line":1,"column":319}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":65,"column":14},"generated":{"line":1,"column":328}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":65,"column":49},"generated":{"line":1,"column":332}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":65,"column":35},"generated":{"line":1,"column":349}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":66,"column":11},"generated":{"line":1,"column":351}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":66,"column":11},"generated":{"line":1,"column":358}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"date","original":{"line":69,"column":6},"generated":{"line":1,"column":360}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"date","original":{"line":69,"column":6},"generated":{"line":1,"column":364}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":69,"column":13},"generated":{"line":1,"column":367}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":69,"column":20},"generated":{"line":1,"column":369}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":69,"column":20},"generated":{"line":1,"column":371}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"dirtyDate","original":{"line":69,"column":20},"generated":{"line":1,"column":380}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","original":{"line":70,"column":9},"generated":{"line":1,"column":383}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"isNaN","original":{"line":70,"column":10},"generated":{"line":1,"column":390}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"Number","original":{"line":70,"column":16},"generated":{"line":1,"column":396}},{"source":"node_modules\\date-fns\\esm\\isValid\\index.js","name":"date","original":{"line":70,"column":23},"generated":{"line":1,"column":403}}],"sources":{"node_modules\\date-fns\\esm\\isValid\\index.js":"import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}"},"lineCount":null}},"hash":"aa4018de251ddf655dd00f2fc85ed1c0","cacheData":{"env":{}},"id":151}