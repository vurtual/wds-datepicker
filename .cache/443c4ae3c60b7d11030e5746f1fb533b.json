{"dependencies":[{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\intlFormat\\package.json","includedInParent":true,"mtime":1635000531211},{"name":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\package.json","includedInParent":true,"mtime":1635014046110},{"name":"../_lib/requiredArgs/index.js","loc":{"line":1,"column":25},"parent":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\intlFormat\\index.js","resolved":"O:\\OneDrive\\Documents\\Learning\\WDS\\datepicker\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = intlFormat;\n\nvar _index = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @param {Date|Number} argument - the original date.\n * @param {Object} [formatOptions] - an object with options.\n * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.\n * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.\n * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.\n * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.\n * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.\n * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.\n * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.\n * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.\n * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.\n * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.\n * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.\n * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.\n * @param {String} [formatOptions.timeZone] - the time zone to use.\n * @param {Object} [localeOptions] - an object with locale.\n * @param {String|String[]} [localeOptions.locale] - the locale code\n * @returns {String} the formatted date string.\n * @throws {TypeError} 1 argument required.\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      weekday: 'long',\n *      year: 'numeric',\n *      month: 'long',\n *      day: 'numeric',\n *    }, {\n *      locale: 'de-DE',\n *  })\n * //=> Freitag, 4. Oktober 2019\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      year: 'numeric',\n *      month: 'numeric',\n *      day: 'numeric',\n *      hour: 'numeric',\n *  })\n * //=> 10/4/2019, 12 PM\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      locale: 'ko-KR',\n *  })\n * //=> 2019. 10. 4.\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\nfunction intlFormat(date, formatOrLocale, localeOptions) {\n  var _localeOptions;\n\n  (0, _index2.default)(1, arguments);\n  var formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !('locale' in opts);\n}","map":{"mappings":[{"name":"intlFormat","generated":{"line":6,"column":18},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":3,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":15}},{"name":"intlFormat","generated":{"line":84,"column":9},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":24}},{"generated":{"line":84,"column":19},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":15}},{"name":"date","generated":{"line":84,"column":20},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":35}},{"generated":{"line":84,"column":24},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":15}},{"name":"formatOrLocale","generated":{"line":84,"column":26},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":41}},{"generated":{"line":84,"column":40},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":15}},{"name":"localeOptions","generated":{"line":84,"column":42},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":57}},{"generated":{"line":84,"column":55},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":15}},{"generated":{"line":84,"column":57},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":73,"column":72}},{"generated":{"line":85,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":74,"column":2}},{"name":"_localeOptions","generated":{"line":85,"column":6},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":74,"column":6}},{"generated":{"line":85,"column":20},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":74,"column":2}},{"generated":{"line":87,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":76,"column":2}},{"generated":{"line":87,"column":23},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":76,"column":15}},{"generated":{"line":87,"column":24},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":76,"column":2}},{"name":"arguments","generated":{"line":87,"column":26},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":76,"column":18}},{"generated":{"line":87,"column":35},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":76,"column":2}},{"generated":{"line":88,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":77,"column":2}},{"name":"formatOptions","generated":{"line":88,"column":6},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":77,"column":6}},{"generated":{"line":88,"column":19},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":77,"column":2}},{"generated":{"line":90,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":2}},{"name":"isFormatOptions","generated":{"line":90,"column":6},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":6}},{"name":"formatOrLocale","generated":{"line":90,"column":22},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":22}},{"generated":{"line":90,"column":36},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":6}},{"generated":{"line":90,"column":37},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":2}},{"generated":{"line":90,"column":39},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":39}},{"name":"formatOptions","generated":{"line":91,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":80,"column":4}},{"name":"formatOrLocale","generated":{"line":91,"column":20},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":80,"column":20}},{"generated":{"line":91,"column":34},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":80,"column":4}},{"generated":{"line":92,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":81,"column":3}},{"generated":{"line":92,"column":3},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":79,"column":2}},{"generated":{"line":92,"column":9},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":81,"column":9}},{"name":"localeOptions","generated":{"line":93,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":82,"column":4}},{"name":"formatOrLocale","generated":{"line":93,"column":20},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":82,"column":20}},{"generated":{"line":93,"column":34},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":82,"column":4}},{"generated":{"line":94,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":83,"column":3}},{"generated":{"line":96,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":2}},{"generated":{"line":96,"column":9},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"name":"Intl","generated":{"line":96,"column":13},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":13}},{"name":"DateTimeFormat","generated":{"line":96,"column":18},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":18}},{"generated":{"line":96,"column":32},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"generated":{"line":96,"column":33},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":33}},{"name":"_localeOptions","generated":{"line":96,"column":34},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":34}},{"name":"localeOptions","generated":{"line":96,"column":51},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":51}},{"generated":{"line":96,"column":64},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":33}},{"generated":{"line":96,"column":70},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":70}},{"generated":{"line":96,"column":74},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":33}},{"name":"_localeOptions","generated":{"line":96,"column":78},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":78}},{"generated":{"line":96,"column":97},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":97}},{"generated":{"line":96,"column":102},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":102}},{"generated":{"line":96,"column":103},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":33}},{"generated":{"line":96,"column":106},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":106}},{"generated":{"line":96,"column":111},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":111}},{"generated":{"line":96,"column":112},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":33}},{"name":"_localeOptions","generated":{"line":96,"column":115},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":115}},{"name":"locale","generated":{"line":96,"column":130},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":130}},{"generated":{"line":96,"column":136},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"name":"formatOptions","generated":{"line":96,"column":138},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":138}},{"generated":{"line":96,"column":151},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"name":"format","generated":{"line":96,"column":153},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":153}},{"generated":{"line":96,"column":159},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"name":"date","generated":{"line":96,"column":160},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":160}},{"generated":{"line":96,"column":164},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":9}},{"generated":{"line":96,"column":165},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":85,"column":2}},{"generated":{"line":97,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":86,"column":1}},{"generated":{"line":99,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":0}},{"name":"isFormatOptions","generated":{"line":99,"column":9},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":9}},{"generated":{"line":99,"column":24},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":0}},{"name":"opts","generated":{"line":99,"column":25},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":25}},{"generated":{"line":99,"column":29},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":0}},{"generated":{"line":99,"column":31},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":88,"column":31}},{"generated":{"line":100,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":2}},{"name":"opts","generated":{"line":100,"column":9},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":9}},{"name":"undefined","generated":{"line":100,"column":18},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":18}},{"generated":{"line":100,"column":27},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":9}},{"generated":{"line":100,"column":31},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":31}},{"generated":{"line":100,"column":33},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":33}},{"name":"opts","generated":{"line":100,"column":45},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":45}},{"generated":{"line":100,"column":49},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":31}},{"generated":{"line":100,"column":50},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":89,"column":2}},{"generated":{"line":101,"column":0},"source":"node_modules\\date-fns\\esm\\intlFormat\\index.js","original":{"line":90,"column":1}}],"sources":{"node_modules\\date-fns\\esm\\intlFormat\\index.js":"import requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @param {Date|Number} argument - the original date.\n * @param {Object} [formatOptions] - an object with options.\n * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.\n * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.\n * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.\n * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.\n * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.\n * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.\n * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.\n * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.\n * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.\n * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.\n * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.\n * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.\n * @param {String} [formatOptions.timeZone] - the time zone to use.\n * @param {Object} [localeOptions] - an object with locale.\n * @param {String|String[]} [localeOptions.locale] - the locale code\n * @returns {String} the formatted date string.\n * @throws {TypeError} 1 argument required.\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      weekday: 'long',\n *      year: 'numeric',\n *      month: 'long',\n *      day: 'numeric',\n *    }, {\n *      locale: 'de-DE',\n *  })\n * //=> Freitag, 4. Oktober 2019\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      year: 'numeric',\n *      month: 'numeric',\n *      day: 'numeric',\n *      hour: 'numeric',\n *  })\n * //=> 10/4/2019, 12 PM\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      locale: 'ko-KR',\n *  })\n * //=> 2019. 10. 4.\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\nexport default function intlFormat(date, formatOrLocale, localeOptions) {\n  var _localeOptions;\n\n  requiredArgs(1, arguments);\n  var formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !('locale' in opts);\n}"},"lineCount":null}},"hash":"32342563c7d100d439ff3782c873f7fe","cacheData":{"env":{}},"id":118}